#!/usr/bin/env python3

import argparse
import sys
import time

import korflab

def edit_distance(s1, s2):
	d = 0
	for c1, c2 in zip(s1, s2): d += 1 if c1 != c2 else 0 

def kmer_freq(s, k):
	kdict = {}
	k = 5
	for i in range(len(s1) -k + 1):
		kmer = s1[i:i+k]
		if kmer not in kdict: kdict[kmer] = 0
		kdict[kmer] += 1
	for kmer in kdict:
		kdict[kmer] /= (len(s) -k +1)

parser = argparse.ArgumentParser(description='quick python-based cpu benchmark')
parser.add_argument('--size', type=int, default=9999, metavar='<int>',
	help='string size [%(default)i]')
parser.add_argument('--k', type=int, default=5, metavar='<int>',
	help='kmer size [%(default)i]')
parser.add_argument('--limit', type=float, default=10.0, metavar='<float>',
	help='seconds to run test [%(default).1f]')
arg = parser.parse_args()

t0 = time.time()
n = 0
seen = set()
while True:
	s1 = korflab.random_dna(arg.size)
	s2 = korflab.random_dna(arg.size)
	edit_distance(s1, s2)
	kmer_freq(s1, arg.k)
	kmer_freq(s2, arg.k)
	
	n += 1
	t1 = time.time()
	elapsed = t1 - t0
	sec = elapsed // 1
	if sec not in seen:
		print('.', end='', file=sys.stderr, flush=True)
		seen.add(sec)
	if elapsed > arg.limit: break

print(file=sys.stderr)
print(n / elapsed)

